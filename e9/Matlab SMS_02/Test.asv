clc
clear
close all
trainSeqNumber = 100;    %number of training sequences
testSeqNumber = 5;      %number of testing sequences

%*********** data generation starts **********************************
% system model: transition matrices
A = zeros(3,3,2);
A(:,:,1) = [0.8 0.1 0.1;
            0.1 0.8 0.1;
            0.1 0.1 0.8];   % action: non-shift (left to right)
A(:,:,2) = [0.1 0.8 0.1;
            0.1 0.1 0.8;
            0.8 0.1 0.1];   % action: shift to next
% system model: emission matrices
B1 = [0.90 0.05 0.05;
      0.05 0.90 0.05;
      0.05 0.05 0.90];
B2 = [0.80 0.15 0.05;
      0.20 0.75 0.05;
      0.10 0.05 0.85];
% system model: initial distribution/initial states
pinit = [1; 0; 0];

%generating training sequences
for i = 1:trainSeqNumber
    L = round(100.*rand + 150);
    p_trans = 0.5;     % prob to chose trans action
    U{i} = (rand(L-1, 1) < p_trans) + 1;
    [X{i}, Y{i}, Z{i}] = simulation(pinit, A, B1,B2, U{i});
end
%*********** data generation ends ************************************


%*********** Model initialization starts *****************************

% init param
A_init = rand(3,3,2);

% A_init(:,:,1) = [0.9  0.10 0.00;   0.00 0.90 0.10;   0.00 0.10 0.80];   
% A_init(:,:,2) = [0.00 0.75 0.25;   0.00 0.25 0.75;   0.75 0.25 0.00];

B_init1 = rand(3,3);
B_init2 = rand(3,3);
pinit_init = rand(3,1);

%*********** Model initialization ends ******************************


%*********** Model training starts **********************************
%Learning parameters
nr_iter = 20; % number of iteration
[pinit_lrn, A_lrn, B_lrn1, B_lrn2] = EM_param_learning(Y,Z,U, pinit_init, A_init, B_init1, B_init2, nr_iter);

disp ('01 The initial states are:------------------- ') 
pinit_lrn

disp ('02 The transition matrices are:------------------- ') 
A_lrn

disp ('03 The emission matrices are:------------------- ') 
B_lrn1
B_lrn2
%*********** Model training ends ************************************

%Testting

%Testting
%generating testting sequences
for i = 1:testSeqNumber
    % control seq
    L = round(100.*rand + 150);
    p_trans = 0.5;     % prob to chose trans action
    U2{i} = (rand(L-1, 1) < p_trans) + 1;
    [X2{i}, Y2{i}, Z2{i}] = simulation(pinit, A, B1,B2, U2{i});
end
% for i = 1:testSeqNumber
%     U2{i} = U{i}; X2{i} = X{i}; Y2{i} = Y{i}; Z2{i} = Z{i};
% end
[current_distributions] = viterbi_7(Y2,Z2,U2, pinit_lrn, A_lrn, B_lrn1,B_lrn2);


if any(isnan(current_distributions)) 
    disp ('Not enough information in the data. Creat a new dataset or increase the data volume.')
elseif (current_distributions(1)==1)
    disp ('The system is in good health.')
elseif (current_distributions(2)==1)
    disp ('The system is damaged but still functioning.')
else
    disp ('The system is failed.')
end
%Predicting future